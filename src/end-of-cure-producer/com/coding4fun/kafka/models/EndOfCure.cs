// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.9.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace com.coding4fun.kafka.models
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class EndOfCure : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"EndOfCure\",\"namespace\":\"com.coding4fun.kafka.models\",\"fi" +
				"elds\":[{\"name\":\"Date\",\"type\":\"string\"},{\"name\":\"ItemCode\",\"type\":\"string\"},{\"nam" +
				"e\":\"CureEquipmentId\",\"type\":\"string\"}]}");
		private string _Date;
		private string _ItemCode;
		private string _CureEquipmentId;
		public virtual Schema Schema
		{
			get
			{
				return EndOfCure._SCHEMA;
			}
		}
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				this._Date = value;
			}
		}
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				this._ItemCode = value;
			}
		}
		public string CureEquipmentId
		{
			get
			{
				return this._CureEquipmentId;
			}
			set
			{
				this._CureEquipmentId = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.Date;
			case 1: return this.ItemCode;
			case 2: return this.CureEquipmentId;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.Date = (System.String)fieldValue; break;
			case 1: this.ItemCode = (System.String)fieldValue; break;
			case 2: this.CureEquipmentId = (System.String)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
